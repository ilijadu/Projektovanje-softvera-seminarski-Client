/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.Antikvitet;
import domain.ProdajaAntikviteta;
import domain.TipAntikviteta;
import domain.Valuta;
import domain.Vlasnik;
import forms.util.FormView;
import java.awt.HeadlessException;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.util.Pair;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import transfer.Response;

/**
 *
 * @author Ilija Dumanović
 */
public class KreiranjeAntikviteta extends javax.swing.JFrame {

    /**
     * Creates new form KreiranjeAntikviteta
     */
    Antikvitet a;
    PretrazivanjeAntikviteta pa;
    List<Vlasnik> vlasnici;
    List<TipAntikviteta> tipovi;
    KreiranjeVlasnika ka;

    public KreiranjeAntikviteta(int formView) {
        initComponents();
        cmbTip.setSelectedItem(null);
        cmbValuta.setSelectedItem(null);
        cmbVlasnik.setSelectedItem(null);
        populateForm();
        populateView(formView);
    }

    public KreiranjeAntikviteta(int formView, Antikvitet a, PretrazivanjeAntikviteta pa, KreiranjeVlasnika ka) {
        initComponents();
        populateForm();
        this.a = a;
        this.pa = pa;
        this.ka = ka;
        setAntikvitet(a);
        populateView(formView);
        setVisible(true);
        JOptionPane.showMessageDialog(this, "Sistem je učitao odarani antikvitet.");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnSave = new javax.swing.JButton();
        lblNaziv = new javax.swing.JTextField();
        lblVrednost = new javax.swing.JTextField();
        cmbTip = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbValuta = new javax.swing.JComboBox<>();
        cmbVlasnik = new javax.swing.JComboBox<>();
        jbtnUpdate = new javax.swing.JButton();
        jbtnEnable = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kreiranje antikviteta");

        jLabel1.setText("Naziv:");

        jLabel2.setText("Vrednost:");

        jLabel4.setText("Tip antikviteta:");

        jbtnSave.setText("Sačuvaj");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        cmbTip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Vlasnik:");

        cmbValuta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbVlasnik.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnUpdate.setText("Ažuriraj");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        jbtnEnable.setText("Omogući izmenu");
        jbtnEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEnableActionPerformed(evt);
            }
        });

        jbtnDelete.setText("Obriši");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnEnable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnUpdate)
                        .addGap(12, 12, 12)
                        .addComponent(jbtnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbValuta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblNaziv)
                            .addComponent(cmbTip, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbVlasnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbValuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbVlasnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSave)
                    .addComponent(jbtnEnable)
                    .addComponent(jbtnDelete)
                    .addComponent(jbtnUpdate))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(555, 314));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        try {
            if (proveriValidnost()) {
                Antikvitet a = getAntikvitet();
                Response response = Komunikacija.getInstance().KreirajAntikvitet(a);
                if (response.getException() == null) {
                    int br = JOptionPane.showConfirmDialog(this, "Uspesno dodat antikvitet. Da li želite da dodate još jedan antikvitet", "Dodat antikvitet", JOptionPane.YES_NO_OPTION);
                    if (br == 1) {
                        this.dispose();
                    }
                    lblNaziv.setText("");
                    lblVrednost.setText("");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(KreiranjeAntikviteta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        try {
            if (proveriValidnost()) {
                int br = Komunikacija.getInstance().ZapamtiAntikvitet(getAntikvitet());
                if (br > 0) {
                    JOptionPane.showMessageDialog(this, "Sistem je zapatio antikvitet.", "Poruka", JOptionPane.INFORMATION_MESSAGE);
                    if (pa != null) {
                        pa.pretragaAntikviteta();
                    }
                    if (ka != null) {
                        ka.osveziTabelu();
                    }
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti antikvitet! Pokušajte ponovo.", "Poruka", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(KreiranjeAntikviteta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEnableActionPerformed
        populateView(FormView.FORM_EDIT_MODE);
    }//GEN-LAST:event_jbtnEnableActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        try {
            Antikvitet antikv = getAntikvitet();
            List<ProdajaAntikviteta> prodati = Komunikacija.getInstance().UcitajSveProdajaAntikvitetaSaParametrom(new Pair<String, String>("antikvitet_id", String.valueOf(antikv.getId())));
            System.out.println("form.KreiranjeAntikviteta.jbtnDeleteActionPerformed()");
            if (prodati.size() == 0) {
                int br = Komunikacija.getInstance().ObrisiAntikvitet(getAntikvitet());
                if (br > 0) {
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao antikvitet.", "Poruka", JOptionPane.OK_OPTION);
                    if (pa != null) {
                        pa.pretragaAntikviteta();
                    }
                    if (ka != null) {
                        ka.osveziTabelu();
                    }
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da obriše antikvitet.", "Poruka", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
                StringBuilder sb = new StringBuilder();
                for (ProdajaAntikviteta prodajaAntikviteta : prodati) {
                    sb.append(prodajaAntikviteta.getAukcija().getNaziv()).append("; ");
                }
                JOptionPane.showMessageDialog(this, "Nije moguće obrisati antikvitet, jer zaveden kao prodat antikvitet na aukciji/aukcijama po nazivom: " + sb.toString());
            }

        } catch (Exception ex) {
            Logger.getLogger(KreiranjeAntikviteta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTip;
    private javax.swing.JComboBox<String> cmbValuta;
    private javax.swing.JComboBox<String> cmbVlasnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnEnable;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JTextField lblNaziv;
    private javax.swing.JTextField lblVrednost;
    // End of variables declaration//GEN-END:variables

    private void populateView(int formView) {
        switch (formView) {
            case FormView.FORM_ADD_MODE:
                jbtnDelete.setEnabled(false);
                jbtnEnable.setEnabled(false);
                jbtnUpdate.setEnabled(false);
                jbtnSave.setEnabled(true);
                break;
            case FormView.FORM_EDIT_MODE:
                jbtnDelete.setEnabled(false);
                jbtnEnable.setEnabled(false);
                jbtnUpdate.setEnabled(true);
                jbtnSave.setEnabled(false);
                lblNaziv.setEnabled(true);
                lblVrednost.setEnabled(true);
                cmbTip.setEnabled(true);
                cmbValuta.setEnabled(true);
                cmbVlasnik.setEnabled(true);
                break;
            case FormView.FORM_VIEW_MODE:
                jbtnEnable.setEnabled(true);
                jbtnDelete.setEnabled(true);
                jbtnUpdate.setEnabled(false);
                jbtnSave.setEnabled(false);
                lblNaziv.setEnabled(false);
                lblVrednost.setEnabled(false);
                cmbTip.setEnabled(false);
                cmbValuta.setEnabled(false);
                cmbVlasnik.setEnabled(false);
                break;
        }
    }

    private void populateForm() {
        try {
            vlasnici = Komunikacija.getInstance().UcitajVlasnike();
            tipovi = Komunikacija.getInstance().UcitajListuTipova();

            cmbValuta.setModel(new DefaultComboBoxModel(Valuta.values()));
            cmbTip.setModel(new DefaultComboBoxModel(tipovi.toArray()));
            cmbVlasnik.setModel(new DefaultComboBoxModel(vlasnici.toArray()));
            AutoCompleteDecorator.decorate(cmbTip);
            AutoCompleteDecorator.decorate(cmbValuta);
            AutoCompleteDecorator.decorate(cmbVlasnik);
        } catch (Exception ex) {
            Logger.getLogger(KreiranjeAntikviteta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setAntikvitet(Antikvitet a) {
        lblNaziv.setText(a.getNaziv());

        lblVrednost.setText(String.valueOf(a.getVrednost()));

        cmbValuta.setSelectedItem(a.getValuta());

        cmbTip.setSelectedIndex(a.getTipAntikviteta().getId() - 1);
        System.out.println("forms.KreiranjeAntikviteta.setAntikvitet(), getvlasnik: " + a.getVlasnik());
        cmbVlasnik.getModel().setSelectedItem(a.getVlasnik());

    }

    private Antikvitet getAntikvitet() {
        Antikvitet a = new Antikvitet();
        if (this.a != null) {
            a.setId(this.a.getId());
        } else {
            a.setId(0);
        }
        a.setNaziv(lblNaziv.getText());

        a.setVrednost(BigDecimal.valueOf(Double.parseDouble(lblVrednost.getText())));

        a.setValuta((Valuta) cmbValuta.getSelectedItem());
        System.out.println("forms.KreiranjeAntikviteta.getAntikvitet(), valuta:" + a.getValuta());
        a.setVlasnik((Vlasnik) cmbVlasnik.getSelectedItem());
        System.out.println("forms.KreiranjeAntikviteta.getAntikvitet(), vlasnik: " + a.getVlasnik());
        a.setTipAntikviteta((TipAntikviteta) cmbTip.getSelectedItem());
        System.out.println("forms.KreiranjeAntikviteta.getAntikvitet(), tip: " + a.getTipAntikviteta());
        return a;
    }

    private boolean proveriValidnost() {
        if (lblNaziv.getText().length() < 1) {
            JOptionPane.showMessageDialog(this, "Neispravno unet naziv antikviteta!");
            return false;
        }
        if (lblVrednost.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Molimo vas unesite vrednost antikviteta!");
            return false;
        }
        try {
            boolean b = Double.parseDouble(lblVrednost.getText()) < 0;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Neispravna vrednost antikviteta! Vrednost mora biti veća od 0!");
            return false;
        }
        if (cmbValuta.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Izaberite valutu pre unosa!");
            return false;
        }
        if (cmbVlasnik.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Izaberite vlasnika pre unosa!");
            return false;
        }
        if (cmbTip.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Izaberite tip antikviteta pre unosa!");
            return false;
        }
        return true;
    }
}
